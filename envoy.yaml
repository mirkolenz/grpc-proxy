#< if env.Getenv "ADMIN_PORT" >#
admin:
  address:
    socket_address:
      address: #< .Env.ADMIN_HOST >#
      port_value: #< .Env.ADMIN_PORT >#
#< end >#

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: #< .Env.PROXY_HOST >#
          port_value: #< .Env.PROXY_PORT >#
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                access_log:
                  #< range (env.Getenv "ACCESS_LOG" "/dev/stdout" | strings.Split ",") >#
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: #< . >#
                  #< end >#
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: service_0
                            timeout: #< env.Getenv "BACKEND_TIMEOUT" "120s" >#
                      typed_per_filter_config:
                        envoy.filters.http.cors:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                          allow_origin_string_match:
                            - prefix: "*"
                          allow_methods: GET, PUT, DELETE, POST, OPTIONS
                          allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,connect-protocol-version,connect-timeout-ms
                          max_age: "1728000"
                          expose_headers: grpc-status,grpc-message,grpc-status-details-bin
                http_filters:
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.connect_grpc_bridge
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.connect_grpc_bridge.v3.FilterConfig
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  #< if and (env.Getenv "REST_SERVICES") (env.Getenv "REST_PROTO_DESCRIPTOR") >#
                  - name: envoy.filters.http.grpc_json_transcoder
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                      proto_descriptor: #< $.Env.REST_PROTO_DESCRIPTOR >#
                      services:
                        #< range (.Env.REST_SERVICES | strings.Split ",") >#
                        -  #< . >#
                        #< end >#
                      print_options:
                        add_whitespace: #< env.Getenv "REST_ADD_WHITESPACE" "true" >#
                        always_print_primitive_fields: #< env.Getenv "REST_ALWAYS_PRINT_PRIMITIVE_FIELDS" "false" >#
                        always_print_enums_as_ints: #< env.Getenv "REST_ALWAYS_PRINT_ENUMS_AS_INTS" "false" >#
                        preserve_proto_field_names: #< env.Getenv "REST_PRESERVE_PROTO_FIELD_NAMES" "false" >#
                        stream_newline_delimited: #< env.Getenv "REST_STREAM_NEWLINE_DELIMITED" "false" >#
                      #< if env.Getenv "REST_IGNORED_QUERY_PARAMETERS" >#
                      ignored_query_parameters:
                        #< range (.Env.REST_IGNORED_QUERY_PARAMETERS | strings.Split ",") >#
                        -  #< . >#
                        #< end >#
                      #< end >#
                      request_validation_options:
                        reject_unknown_method: #< env.Getenv "REST_REJECT_UNKNOWN_METHOD" "false" >#
                        reject_unknown_query_parameters: #< env.Getenv "REST_REJECT_UNKNOWN_QUERY_PARAMETERS" "false" >#
                        reject_binding_body_field_collisions: #< env.Getenv "REST_REJECT_BINDING_BODY_FIELD_COLLISIONS" "false" >#
                      auto_mapping: #< env.Getenv "REST_AUTO_MAPPING" "true" >#
                      ignore_unknown_query_parameters: #< env.Getenv "REST_IGNORE_UNKNOWN_QUERY_PARAMETERS" "false" >#
                      convert_grpc_status: #< env.Getenv "REST_CONVERT_GRPC_STATUS" "false" >#
                      url_unescape_spec: #< env.Getenv "REST_URL_UNESCAPE_SPEC" "ALL_CHARACTERS_EXCEPT_RESERVED" >#
                      query_param_unescape_plus: #< env.Getenv "REST_QUERY_PARAM_UNESCAPE_PLUS" "false" >#
                      match_unregistered_custom_verb: #< env.Getenv "REST_MATCH_UNREGISTERED_CUSTOM_VERB" "false" >#
                      case_insensitive_enum_parsing: #< env.Getenv "REST_CASE_INSENSITIVE_ENUM_PARSING" "false" >#
                      # max_request_body_size: #< env.Getenv "REST_MAX_REQUEST_BODY_SIZE" "0" >#
                      # max_response_body_size: #< env.Getenv "REST_MAX_RESPONSE_BODY_SIZE" "0" >#
                  #< end >#
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: service_0
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      dns_lookup_family: V4_PREFERRED
      load_assignment:
        cluster_name: service_0
        endpoints:
          - lb_endpoints:
              #< range (.Env.BACKEND_PORT | strings.Split ",") >#
              - endpoint:
                  address:
                    socket_address:
                      address: #< $.Env.BACKEND_HOST >#
                      port_value: #< . >#
              #< end >#
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options:
              max_concurrent_streams: 100
