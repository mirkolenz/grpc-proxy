#< if env.Getenv "ADMIN_PORT" >#
admin:
  address:
    socket_address:
      address: #< .Env.ADMIN_HOST >#
      port_value: #< .Env.ADMIN_PORT >#
#< end >#

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: #< .Env.PROXY_HOST >#
          port_value: #< .Env.PROXY_PORT >#
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: #< env.Getenv "ACCESS_LOG" "/dev/stdout" >#
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: service_0
                            timeout: #< env.Getenv "BACKEND_TIMEOUT" "120s" >#
                      typed_per_filter_config:
                        envoy.filters.http.cors:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                          allow_origin_string_match:
                            - prefix: "*"
                          allow_methods: GET, PUT, DELETE, POST, OPTIONS
                          allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,connect-protocol-version,connect-timeout-ms
                          max_age: "1728000"
                          expose_headers: grpc-status,grpc-message,grpc-status-details-bin
                http_filters:
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.connect_grpc_bridge
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.connect_grpc_bridge.v3.FilterConfig
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: service_0
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      dns_lookup_family: V4_PREFERRED
      load_assignment:
        cluster_name: service_0
        endpoints:
          - lb_endpoints:
              #< range (.Env.BACKEND_PORT | strings.Split ",") >#
              - endpoint:
                  address:
                    socket_address:
                      address: #< $.Env.BACKEND_HOST >#
                      port_value: #< . >#
              #< end >#
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options:
              max_concurrent_streams: 100
